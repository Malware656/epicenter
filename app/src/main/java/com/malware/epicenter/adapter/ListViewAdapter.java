package com.malware.epicenter.adapter;


import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.bottomsheet.BottomSheetBehavior;
import com.google.android.material.bottomsheet.BottomSheetDialog;
import com.malware.epicenter.HelperFunction;
import com.malware.epicenter.R;
import com.malware.epicenter.Toaster;
import com.malware.epicenter.callBack.ProgressCallback;
import com.malware.epicenter.fragment.BottomSheetFragment;
import com.malware.epicenter.fragment.FolderFragment;
import com.malware.epicenter.model.FileModel;

import java.util.ArrayList;

public class ListViewAdapter extends RecyclerView.Adapter<ListViewAdapter.ViewHolder> {

    private final ArrayList<FileModel> dataSet;
    private FragmentActivity activity;
    HelperFunction helperFunction = new HelperFunction();
    private Toaster toaster;
    private ProgressCallback callback;

    public ListViewAdapter(FragmentActivity activity, ArrayList<FileModel> dataSet, ProgressCallback callback){
        this.dataSet = dataSet;
        this.activity = activity;
        this.callback = callback;
    }

    public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener{
        private final TextView textView;
        private final TextView subTitle;
        private final ImageButton icon;
        private final ImageButton leadingIcon;

        public ViewHolder(View view) {
            super(view);
            textView = view.findViewById(R.id.tile_title);
            subTitle = view.findViewById(R.id.tile_subtitle);
            icon = view.findViewById(R.id.tile_icon);
            leadingIcon = view.findViewById(R.id.leading_icon);

            leadingIcon.setOnClickListener(this);
            icon.setOnClickListener(this);
            view.setOnClickListener(this);
        }

        public TextView getTextView() {
            return textView;
        }
        public TextView getSubTitle() { return subTitle; }
        public ImageButton getIcon() { return  icon; }
        public ImageButton getLeadingIcon() { return  leadingIcon; }

        @Override
        public void onClick(View view) {
            if(view.getId() == R.id.tile_icon){
                helperFunction.alert(activity, "");
            }
            else if(view.getId() == R.id.leading_icon){
                BottomSheetFragment bottomSheetDialog = BottomSheetFragment.newInstance();
                bottomSheetDialog.show(activity.getSupportFragmentManager(), "Bottom Sheet Dialog Fragment");
            }
            else {
                FileModel model = dataSet.get(getLayoutPosition());
                if(!model.isFile()){
                    FragmentManager fragmentManager = activity.getSupportFragmentManager();
                    Fragment fragment = new FolderFragment();
                    Bundle bundle = new Bundle();
                    bundle.putString("path", dataSet.get(getLayoutPosition()).getPath());
                    fragment.setArguments(bundle);
                    fragmentManager.beginTransaction().replace(R.id.fragment_container_view, fragment, model.getName()).addToBackStack(model.getName()).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).commit();
                }
            }

        }
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.list_tile, parent, false);
        toaster = new Toaster(activity);
        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        FileModel model = getItem(position);
        String name = model.getName();
        holder.getTextView().setText(name);
        holder.getSubTitle().setText(model.getSize());
        if(model.isFile()){
            int icon = helperFunction.getIcon(activity.getApplicationContext(), model.getName());
            holder.getIcon().setImageResource(icon);
        }
        else {
            holder.getIcon().setImageResource(R.drawable.folder);
        }
    }

    private FileModel getItem(int pos){
        return dataSet.get(pos);
    }

    @Override
    public int getItemCount() {
        return dataSet.size();
    }
}

// https://www.sandersdenardi.com/moving-a-file-in-the-android-mediastore/