package com.malware.epicenter.fragment;

import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.malware.epicenter.Toaster;
import com.malware.epicenter.adapter.ListViewAdapter;
import com.malware.epicenter.callBack.ProgressCallback;
import com.malware.epicenter.databinding.AndroidLayoutBinding;
import com.malware.epicenter.databinding.ProgressBarBinding;
import com.malware.epicenter.model.FileModel;

import java.io.File;
import java.util.ArrayList;

public class FolderFragment extends Fragment implements ProgressCallback {

    private Toaster toaster;
    private AndroidLayoutBinding binding;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        binding = AndroidLayoutBinding.inflate(inflater, container,false);
        toaster = new Toaster(requireActivity());

        File currentPath;
        Bundle bundle = getArguments();
        if(bundle != null){
            currentPath = new File(getArguments().getString("path"));
        }
        else {
            currentPath = new File(Environment.getExternalStorageDirectory().getPath());
        }

        Log.e("TAG", "onCreateView: " + currentPath );
        ArrayList<FileModel> data = new ArrayList<>();

        if(currentPath.isDirectory()){
            File[] files = currentPath.listFiles();
            if(files != null){
                for (File file : files) {
                    FileModel fileModel = new FileModel(file.getName(), String.valueOf(file.lastModified()));
                    fileModel.setFile(file.isFile());
                    fileModel.setPath(file.getPath());
                    data.add(fileModel);
                }
                LinearLayoutManager llm = new LinearLayoutManager(requireContext());
                ListViewAdapter adapter = new ListViewAdapter(getActivity(), data, this);
                binding.recyclerView.setLayoutManager(llm);
                binding.recyclerView.setAdapter(adapter);
                binding.recyclerView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
                    @Override
                    public void onGlobalLayout() {
                        closeProgress();
                        binding.recyclerView.getViewTreeObserver().removeOnGlobalLayoutListener(this);
                    }
                });
            }
        }
        return binding.getRoot();
    }

    @Override
    public void closeProgress() {
        binding.recyclerView.setVisibility(View.VISIBLE);
        binding.progressCircular.setVisibility(View.GONE);
    }
}
