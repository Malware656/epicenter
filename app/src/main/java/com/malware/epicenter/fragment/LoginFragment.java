package com.malware.epicenter.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentTransaction;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.Task;
import com.malware.epicenter.AuthFunction;
import com.malware.epicenter.HelperFunction;
import com.malware.epicenter.MainActivity;
import com.malware.epicenter.R;
import com.malware.epicenter.Toaster;
import com.malware.epicenter.databinding.LoginLayoutBinding;


public class LoginFragment extends Fragment implements View.OnClickListener{

    private LoginLayoutBinding binding;
    private static final int RC_SIGN_IN = 101;
    Toaster toaster;
    GoogleSignInAccount account;
    private AuthFunction authFunction;

    HelperFunction helperFunction = new HelperFunction();

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if(hasLoggedIn()){
            if(helperFunction.hasPermission(requireContext())){
                moveToMainScreen();
            }
            else{
                getPermissions();
            }
        }
    }

    private boolean hasLoggedIn(){
        account = GoogleSignIn.getLastSignedInAccount(requireActivity());
        return account != null;
    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        binding = LoginLayoutBinding.inflate(inflater, container, false);
        toaster = new Toaster(requireActivity());

        Button singInButton = binding.signIn;
        singInButton.setOnClickListener(this);
        authFunction = new AuthFunction(requireActivity());

        return binding.getRoot();
    }

    private void signIn() {
        Intent signInIntent = authFunction.getGoogleClient().getSignInIntent();
        startActivityForResult(signInIntent, RC_SIGN_IN);
    }

    private void signOut() {
        authFunction.signOut();
    }

    @Override
    public void onClick(View view) {
        if(view.getId() == R.id.logout_button){
            signOut();
        }
        else if(view.getId() == R.id.sign_in){
            signIn();
        }
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(requestCode == RC_SIGN_IN){
            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
            try {
                account  = task.getResult();
                toaster.showToast("Welcome " + account.getDisplayName() + " \uD83E\uDD18\uD83C\uDFFB", Toast.LENGTH_SHORT);
                if(account.getId() != null){
                    new Handler().postDelayed(() -> {
                        if(helperFunction.hasPermission(requireContext())){
                            moveToMainScreen();
                        }
                        else{
                            getPermissions();
                        }
                    }, 1000);
                }
                else{
                    toaster.showToast("Some Error Occurred", Toast.LENGTH_LONG);
                }
            }
            catch (RuntimeException e){
                Log.e("TAG", "onActivityResult: " + e.getMessage() );
            }

        }
    }

    private void moveToMainScreen(){
        Intent intent = new Intent(requireContext(), MainActivity.class);
        startActivity(intent);
        requireActivity().finish();
    }

    private void getPermissions(){
        requireActivity().getSupportFragmentManager().beginTransaction().replace(R.id.main_layout, new PermissionFragment()).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).commit();
    }
}
